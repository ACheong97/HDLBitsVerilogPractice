module top_module (
    input clk,
    input reset,      // Synchronous reset
    input data,
    output start_shifting);

    parameter [2:0] S0 = 0, S1 = 1, S2 = 2, S3 = 3, DONE = 4;
    reg[2:0] current, next;
    
    always@(*)begin
        case(current)
          S0: next = data ? S1 : S0;
          S1: next = data ? S2 : S0;
          S2: next = data ? S2 : S3;
          S3: next = data ? DONE : S0;
        DONE: next = data ? DONE : DONE;
        default: next = S0;
        endcase  
    end
    
    always@(posedge clk)begin
        if(reset)
            current <= S0;
    	else
            current <= next;
    end
       
    assign start_shifting = (current == DONE);
endmodule
