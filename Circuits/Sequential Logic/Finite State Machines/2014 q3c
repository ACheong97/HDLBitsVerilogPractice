module top_module (
    input clk,
    input [2:0] y,
    input x,
    output Y0, //zeroth bit of next state
    output z
);
    reg [2:0] next;
    
    always@(*)begin
        case({y,x})
        	4'b0000: next = 3'b000;
            4'b0001: next = 3'b001; 
        	4'b0010: next = 3'b001;
            4'b0011: next = 3'b100; 
            4'b0100: next = 3'b010;
            4'b0101: next = 3'b001; 
            4'b0110: next = 3'b001;
            4'b0111: next = 3'b010; 
            4'b1000: next = 3'b011;
            4'b1001: next = 3'b100; 
            default: next = 3'b000;
        endcase
    end
    
    assign z = (y == 3'b011 || y == 3'b100);
    assign Y0 = next[0];
endmodule
