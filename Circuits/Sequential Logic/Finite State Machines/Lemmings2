module top_module(
    input clk,
    input areset,    // Freshly brainwashed Lemmings walk left.
    input bump_left,
    input bump_right,
    input ground,
    output walk_left,
    output walk_right,
    output aaah ); 
	
    //parameter
    parameter left = 0, fall_left = 1, right = 2, fall_right = 3;
    reg [1:0] current, next;
    
    //state transition
    always@(*)begin
        case(current)
            left: if(!ground)
                  	next <= fall_left;
                  else if(bump_left)
                    next <= right;
            	  else 
                    next <= left;
            
            right: if(!ground)
                  	next <= fall_right;
           		   else if(bump_right)
                    next <= left;
            	  else 
                    next <= right;
            
        fall_left: if(!ground)
                	   	next <= fall_left;
            	   else if(ground)
                        next <= left;              
       fall_right:if(!ground)
                	   	next <= fall_right;
            	  else if(ground)
                        next <= right;           
        endcase  
    end
    //state flip flop
    always@(posedge clk, posedge areset)begin 
        if(areset)
            current <= left; 
        else
            current <= next;
    end
    
    assign walk_left = (current == left);
    assign walk_right = (current == right);
    assign aaah = (current == fall_left || current == fall_right);
endmodule
